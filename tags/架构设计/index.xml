<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>架构设计 on TomatoPunk</title><link>https://murph.site/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/</link><description>Recent content in 架构设计 on TomatoPunk</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>京ICP备2020037990号</copyright><lastBuildDate>Tue, 22 Sep 2020 14:27:26 +0000</lastBuildDate><atom:link href="https://murph.site/tags/%E6%9E%B6%E6%9E%84%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>Go中的Context</title><link>https://murph.site/post/2020-11-13-context-in-golang/</link><pubDate>Tue, 22 Sep 2020 14:27:26 +0000</pubDate><guid>https://murph.site/post/2020-11-13-context-in-golang/</guid><description>原文信息 @ricardo.linck 原文:Context in Golang! Golang应用程序使用Contexts来进行控制与管理非常关健的应用可靠性,例如在concurrent p</description></item></channel></rss>